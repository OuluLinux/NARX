LAYOUT(TrainSourceLayout, 620, 168)
	ITEM(Switch, series_type, SetLabel(t_("Generate series\nLoad series from file")).HCenterPosZ(208, -198).VCenterPosZ(36, -58))
	ITEM(Option, normalize, SetLabel(t_("Normalize input series")).HCenterPosZ(236, 40).VCenterPosZ(36, -58))
	ITEM(Label, dv___2, SetLabel(t_("Noise factor:")).HCenterPosZ(100, -252).VCenterPosZ(19, 70))
	ITEM(Label, dv___3, SetLabel(t_("Base function:")).HCenterPosZ(100, -252).VCenterPosZ(19, 46))
	ITEM(Label, dv___4, SetLabel(t_("Series length:")).HCenterPosZ(100, -252).VCenterPosZ(19, 22))
	ITEM(Label, dv___5, SetLabel(t_("X End value:")).HCenterPosZ(100, -252).VCenterPosZ(19, -2))
	ITEM(Label, dv___6, SetLabel(t_("X Start value:")).HCenterPosZ(100, -252).VCenterPosZ(19, -26))
	ITEM(EditDoubleSpin, noise_factor, Max(100).Min(0).HCenterPosZ(100, -144).VCenterPosZ(19, 70))
	ITEM(EditIntSpin, series_len, Max(10000).Min(2).HCenterPosZ(100, -144).VCenterPosZ(19, 22))
	ITEM(EditDoubleSpin, x_end, SetInc(0.01).Max(100).Min(1).HCenterPosZ(100, -144).VCenterPosZ(19, -2))
	ITEM(EditDoubleSpin, x_start, Max(100).Min(0).HCenterPosZ(100, -144).VCenterPosZ(19, -26))
	ITEM(DropList, base_fn, HCenterPosZ(100, -144).VCenterPosZ(19, 46))
	ITEM(Label, dv___12, SetLabel(t_("Or use a predefined series:")).HCenterPosZ(236, 40).VCenterPosZ(19, -26))
	ITEM(Switch, predefined, SetLabel(t_("s(t) = sin(x(t)+y(t)*s(t-1)) * z(t) + tan(s(t-2) - s(t-3))\ns(t) = sin(x(t) - y(t-2)) * ln(y(t-1)+1) + ln(|s(t-1)| + 1) - sin(x(t) - y(t-1)) * y(t)")).HCenterPosZ(384, 114).VCenterPosZ(92, 34))
END_LAYOUT

LAYOUT(SeriesLayout, 560, 320)
	ITEM(ArrayCtrl, table_series, HSizePosZ(4, 4).VSizePosZ(44, 28))
	ITEM(EditDoubleSpin, spinbox_test_percentage, Max(90).Min(1).LeftPosZ(232, 84).BottomPosZ(5, 19))
	ITEM(Label, dv___2, SetLabel(t_("Percentage of series length used for test:")).LeftPosZ(4, 224).BottomPosZ(5, 19))
	ITEM(Label, dv___3, SetLabel(t_("Use series in NARX:")).LeftPosZ(4, 108).TopPosZ(4, 19))
	ITEM(Splitter, use_split, LeftPosZ(112, 444).TopPosZ(4, 20))
	ITEM(Label, dv___5, SetLabel(t_("The current series among with exogenous variables")).LeftPosZ(4, 552).TopPosZ(24, 19))
END_LAYOUT

LAYOUT(ArchLayout, 452, 192)
	ITEM(Option, check_del_outputs, SetLabel(t_("Delayed outputs")).SetFrame(BlackFrame()).HCenterPosZ(140, -152).VCenterPosZ(44, 30))
	ITEM(Option, check_exogenous, SetLabel(t_("Exogenous variables")).SetFrame(BlackFrame()).HCenterPosZ(140, -152).VCenterPosZ(44, -18))
	ITEM(Option, check_del_targets, SetLabel(t_("Delayed targets")).SetFrame(BlackFrame()).HCenterPosZ(140, -152).VCenterPosZ(44, -70))
	ITEM(Label, dv___3, SetLabel(t_("Hidden units count:")).HCenterPosZ(116, 8).VCenterPosZ(19, -26))
	ITEM(EditIntSpin, spinbox_hidden_units, Max(10000).Min(1).HCenterPosZ(64, 6).VCenterPosZ(19, -6))
	ITEM(Label, dv___5, SetFrame(BottomSeparatorFrame()).HCenterPosZ(28, 216).VCenterPosZ(13, -21))
	ITEM(Label, dv___6, SetFrame(BottomSeparatorFrame()).HCenterPosZ(364, 28).VCenterPosZ(13, 67))
	ITEM(Label, dv___7, SetFrame(BottomSeparatorFrame()).HCenterPosZ(28, 84).VCenterPosZ(13, -21))
	ITEM(Label, dv___8, SetFrame(BottomSeparatorFrame()).HCenterPosZ(12, -76).VCenterPosZ(13, 27))
	ITEM(Label, dv___9, SetFrame(LeftSeparatorFrame()).HCenterPosZ(12, 216).VCenterPosZ(88, 28))
	ITEM(Label, dv___10, SetFrame(LeftSeparatorFrame()).HCenterPosZ(12, -148).VCenterPosZ(21, 63))
	ITEM(Label, dv___11, SetFrame(LeftSeparatorFrame()).HCenterPosZ(12, -64).VCenterPosZ(105, -19))
	ITEM(Label, dv___12, SetFrame(BottomSeparatorFrame()).HCenterPosZ(28, -68).VCenterPosZ(13, -21))
	ITEM(Label, dv___13, SetFrame(BottomSeparatorFrame()).HCenterPosZ(12, -76).VCenterPosZ(13, -77))
	ITEM(Label, dv___14, SetLabel(t_("  Output units")).SetFrame(BlackFrame()).HCenterPosZ(104, 150).VCenterPosZ(44, -18))
	ITEM(Label, dv___15, SetFrame(BlackFrame()).HCenterPosZ(124, 8).VCenterPosZ(44, -18))
	ITEM(Label, dv___16, SetFrame(BlackFrame()).HCenterPosZ(124, 8).VCenterPosZ(44, -18))
END_LAYOUT

LAYOUT(ParamLayout, 328, 180)
	ITEM(Label, dv___0, SetLabel(t_("Targets regressor size\nOutputs regressor size (feedback)")).HCenterPosZ(208, -56).VCenterPosZ(32, -70))
	ITEM(Label, dv___1, SetLabel(t_("Outputs units activation function:")).HCenterPosZ(208, -56).VCenterPosZ(19, 72))
	ITEM(Label, dv___2, SetLabel(t_("Hidden units activation function:")).HCenterPosZ(208, -56).VCenterPosZ(19, 48))
	ITEM(DropList, combo_ounits_act, HCenterPosZ(108, 106).VCenterPosZ(19, 72))
	ITEM(DropList, combo_hunits_act, HCenterPosZ(108, 106).VCenterPosZ(19, 48))
	ITEM(Label, dv___5, SetLabel(t_("Number of epochs:")).HCenterPosZ(208, -56).VCenterPosZ(19, 24))
	ITEM(Label, dv___6, SetLabel(t_("Learning rate:")).HCenterPosZ(208, -56).VCenterPosZ(19, 0))
	ITEM(Label, dv___7, SetLabel(t_("Inputs regressor size (exogenous)")).HCenterPosZ(208, -56).VCenterPosZ(19, -40))
	ITEM(EditIntSpin, epochs, Max(1000000).Min(1).HCenterPosZ(108, 106).VCenterPosZ(19, 24))
	ITEM(EditDoubleSpin, learning_rate, SetInc(0.001).Max(1).Min(0).HCenterPosZ(108, 106).VCenterPosZ(19, 0))
	ITEM(EditIntSpin, spinbox_xregressor, Min(0).HCenterPosZ(108, 106).VCenterPosZ(19, -40))
	ITEM(EditIntSpin, spinbox_dregressor, Min(0).HCenterPosZ(108, 106).VCenterPosZ(19, -64))
END_LAYOUT

LAYOUT(TrainingLayout, 400, 236)
	ITEM(Label, dv___0, SetLabel(t_("NARX is ready for training. ")).HSizePosZ(4, 28).TopPosZ(4, 19))
	ITEM(ProgressIndicator, progress, HSizePosZ(4, 48).TopPosZ(24, 20))
	ITEM(Label, perc, SetLabel(t_("0%")).SetAlign(ALIGN_RIGHT).RightPosZ(4, 40).TopPosZ(24, 20))
	ITEM(ArrayCtrl, log, HSizePosZ(4, 4).VSizePosZ(48, 4))
END_LAYOUT

LAYOUT(PredictLayout, 400, 200)
	ITEM(Label, dv___0, SetLabel(t_("x = ")).LeftPosZ(4, 20).TopPosZ(24, 19))
	ITEM(Label, dv___1, SetLabel(t_("Exogenous variables ( for the time step you want to predict )")).LeftPosZ(4, 328).TopPosZ(4, 19))
	ITEM(EditIntSpin, x, LeftPosZ(24, 52).TopPosZ(24, 20))
	ITEM(ArrayCtrl, vars, HSizePosZ(4, 4).VSizePosZ(48, 4))
END_LAYOUT

